@using Signum.Entities.Files
@using Signum.Entities.Word
@using Signum.Web.Word
@using Signum.Web.Files
@using Signum.Entities.DynamicQuery
@using Signum.Engine.Basics
@using Signum.Engine.DynamicQuery

@using (var ec = Html.TypeContext<WordTemplateEntity>())
{
    <div class="col-sm-8">
        @Html.ValueLine(ec, f => f.Name)
        @Html.EntityLine(ec, f => f.Query)
        @Html.EntityCombo(ec, f => f.SystemWordTemplate)
        @Html.EntityCombo(ec, f => f.Culture)
        @Html.EntityCombo(ec, f => f.WordTransformer)
        @Html.EntityCombo(ec, f => f.WordConverter)
        @Html.ValueLine(ec, f => f.FileNameFormat)
    </div>
    if (!ec.Value.IsNew)
    {
        using (var sc = ec.SubContext())
        {
            sc.FormGroupStyle = FormGroupStyle.Basic;
            <div class="col-sm-4 form-vertical">
                <fieldset style="margin-top: -25px">
                    <legend>Active</legend>
                    @Html.ValueLine(sc, e => e.Active, vl => vl.InlineCheckbox = true)
                    @Html.ValueLine(sc, e => e.StartDate)
                    @Html.ValueLine(sc, e => e.EndDate)
                </fieldset>
            </div>
        }
    }

    if (ec.Value.Query != null)
    {

        var ctx = new Context(ec, "tokenBuilder");

        var qd = DynamicQueryManager.Current.QueryDescription(ec.Value.Query.ToQueryName());

        <div style="background-color:lightgray">
            <div class="sf-word-template-container">
                @Html.QueryTokenBuilder(null, ctx, WordClient.GetQueryTokenBuilderSettings(qd, SubTokensOptions.CanAnyAll | SubTokensOptions.CanElement))
                <input type="button" disabled="disabled" data-prefix="@ctx.Prefix" class="btn btn-default btn-sm sf-button sf-word-inserttoken sf-word-inserttoken-basic" value="@(Signum.Entities.Mailing.EmailTemplateViewMessage.Insert.NiceToString())" />
                <input type="button" disabled="disabled" data-prefix="@ctx.Prefix" class="btn btn-default btn-sm sf-button sf-word-inserttoken sf-word-inserttoken-if" data-block="if" value="if" />
                <input type="button" disabled="disabled" data-prefix="@ctx.Prefix" class="btn btn-default btn-sm sf-button sf-word-inserttoken sf-word-inserttoken-foreach" data-block="foreach" value="foreach" />
                <input type="button" disabled="disabled" data-prefix="@ctx.Prefix" class="btn btn-default btn-sm sf-button sf-word-inserttoken sf-word-inserttoken-any" data-block="any" value="any" />
            </div>

            <script>
                $(function () {
                    @(WordClient.Module["initReplacements"]())
                });
            </script>
        </div>
        <br />
        <div class="col-sm-8">
            @Html.FileLineLite(ec, e => e.Template)
        </div>
    }
}

