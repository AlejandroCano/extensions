#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    
    #line 2 "..\..\Translation\Views\ViewInstance.cshtml"
    using System.Globalization;
    
    #line default
    #line hidden
    using System.IO;
    using System.Linq;
    using System.Net;
    
    #line 5 "..\..\Translation\Views\ViewInstance.cshtml"
    using System.Reflection;
    
    #line default
    #line hidden
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 3 "..\..\Translation\Views\ViewInstance.cshtml"
    using Signum.Engine.Translation;
    
    #line default
    #line hidden
    using Signum.Entities;
    
    #line 4 "..\..\Translation\Views\ViewInstance.cshtml"
    using Signum.Entities.Translation;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Translation\Views\ViewInstance.cshtml"
    using Signum.Utilities;
    
    #line default
    #line hidden
    using Signum.Web;
    
    #line 7 "..\..\Translation\Views\ViewInstance.cshtml"
    using Signum.Web.Translation.Controllers;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Translation/Views/ViewInstance.cshtml")]
    public partial class _Translation_Views_ViewInstance_cshtml : System.Web.Mvc.WebViewPage<Dictionary<CultureInfo, Dictionary<LocalizedInstanceKey, TranslatedInstanceDN>>>
    {
        public _Translation_Views_ViewInstance_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 8 "..\..\Translation\Views\ViewInstance.cshtml"
  
    CultureInfo culture = ViewBag.Culture;
    Type type = ViewBag.Type;
    Lite<Entity> instance = ViewBag.Instance;

    ViewBag.Title = TranslationMessage.View0In1.NiceToString().Formato(type != null ? type.NiceName() : instance.ToString(), culture == null ? TranslationMessage.AllLanguages.NiceToString() : culture.DisplayName);

    Dictionary<LocalizedInstanceKey, string> master = ViewBag.Master;

    var cultures = TranslationLogic.CurrentCultureInfos(TranslatedInstanceLogic.DefaultCulture);

    Func<CultureInfo, bool> editCulture = c => culture == null || culture.Name == c.Name;

    var filter = (string)ViewBag.Filter;

    var all = string.IsNullOrEmpty(filter);

    Func<LocalizedInstanceKey, bool> filtered = li => all ||
        li.RowId.ToString() == filter ||
        li.Instance.Id.ToString() == filter ||
        li.Route.PropertyString().Contains(filter, StringComparison.InvariantCultureIgnoreCase) ||
        master.GetOrThrow(li).Contains(filter, StringComparison.InvariantCultureIgnoreCase) ||
        cultures.Any(ci => Model.TryGetC(ci).TryGetC(li).Try(t => t.TranslatedText).DefaultText("").Contains(filter, StringComparison.InvariantCultureIgnoreCase));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 32 "..\..\Translation\Views\ViewInstance.cshtml"
Write(Html.ScriptCss("~/Translation/Content/Translation.css"));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n\r\n<h2>");

            
            #line 36 "..\..\Translation\Views\ViewInstance.cshtml"
Write(ViewBag.Title);

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n\r\n<div>\r\n");

            
            #line 39 "..\..\Translation\Views\ViewInstance.cshtml"
    
            
            #line default
            #line hidden
            
            #line 39 "..\..\Translation\Views\ViewInstance.cshtml"
     using (Html.BeginForm(type != null ? "View" : "ViewEntity", "TranslatedInstance", FormMethod.Get))
    {
        if (type != null)
        { 
            
            
            #line default
            #line hidden
            
            #line 43 "..\..\Translation\Views\ViewInstance.cshtml"
       Write(Html.Hidden("type"));

            
            #line default
            #line hidden
            
            #line 43 "..\..\Translation\Views\ViewInstance.cshtml"
                                
        }
        else
        {
            
            
            #line default
            #line hidden
            
            #line 47 "..\..\Translation\Views\ViewInstance.cshtml"
       Write(Html.Hidden("instance", instance.Key()));

            
            #line default
            #line hidden
            
            #line 47 "..\..\Translation\Views\ViewInstance.cshtml"
                                                    ;
        }
        
            
            #line default
            #line hidden
            
            #line 49 "..\..\Translation\Views\ViewInstance.cshtml"
   Write(Html.Hidden("culture"));

            
            #line default
            #line hidden
            
            #line 49 "..\..\Translation\Views\ViewInstance.cshtml"
                               
        
            
            #line default
            #line hidden
            
            #line 50 "..\..\Translation\Views\ViewInstance.cshtml"
   Write(Html.TextBox("filter", filter));

            
            #line default
            #line hidden
            
            #line 50 "..\..\Translation\Views\ViewInstance.cshtml"
                                       ;
        

            
            #line default
            #line hidden
WriteLiteral("        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"searchPressed\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" />\r\n");

WriteLiteral("        <input");

WriteLiteral(" type=\"submit\"");

WriteAttribute("value", Tuple.Create(" value=\"", 2064), Tuple.Create("\"", 2113)
            
            #line 53 "..\..\Translation\Views\ViewInstance.cshtml"
, Tuple.Create(Tuple.Create("", 2072), Tuple.Create<System.Object, System.Int32>(TranslationMessage.Search.NiceToString()
            
            #line default
            #line hidden
, 2072), false)
);

WriteLiteral(" />\r\n");

            
            #line 54 "..\..\Translation\Views\ViewInstance.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n\r\n");

            
            #line 57 "..\..\Translation\Views\ViewInstance.cshtml"
 if (Model == null)
{

            
            #line default
            #line hidden
WriteLiteral("    <em>");

            
            #line 59 "..\..\Translation\Views\ViewInstance.cshtml"
   Write(TranslationMessage.PressSearchForResults.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("</em>\r\n");

            
            #line 60 "..\..\Translation\Views\ViewInstance.cshtml"
}
else if (Model.IsEmpty())
{

            
            #line default
            #line hidden
WriteLiteral("    <strong>");

            
            #line 63 "..\..\Translation\Views\ViewInstance.cshtml"
       Write(TranslationMessage.NoResultsFound.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("</strong>  \r\n");

            
            #line 64 "..\..\Translation\Views\ViewInstance.cshtml"
}
else
{
    using (type != null ? Html.BeginForm<TranslatedInstanceController>(c => c.SaveView(Signum.Engine.Basics.TypeLogic.GetCleanName(type), culture == null ? null : culture.Name, filter)) :
        Html.BeginForm<TranslatedInstanceController>(c => c.SaveViewEntity(instance, culture == null ? null : culture.Name, filter)))
    {

            
            #line default
            #line hidden
WriteLiteral("    <table");

WriteLiteral(" id=\"results\"");

WriteLiteral(" style=\"width: 100%; margin: 0px\"");

WriteLiteral(" class=\"st\"");

WriteLiteral(">\r\n");

            
            #line 71 "..\..\Translation\Views\ViewInstance.cshtml"
        
            
            #line default
            #line hidden
            
            #line 71 "..\..\Translation\Views\ViewInstance.cshtml"
          
            var masterKeys = master.Keys.Where(li => master.GetOrThrow(li).HasText()).ToList();
            var filteredMasterKeys = masterKeys.Where(filtered).ToList();
        
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 75 "..\..\Translation\Views\ViewInstance.cshtml"
        
            
            #line default
            #line hidden
            
            #line 75 "..\..\Translation\Views\ViewInstance.cshtml"
         foreach (var locInstance in filteredMasterKeys.GroupBy(a => a.Instance).OrderBy(a => a.Key.Id))
        { 

            
            #line default
            #line hidden
WriteLiteral("            <thead>\r\n");

            
            #line 78 "..\..\Translation\Views\ViewInstance.cshtml"
                
            
            #line default
            #line hidden
            
            #line 78 "..\..\Translation\Views\ViewInstance.cshtml"
                 if (type == null)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n                        <th");

WriteLiteral(" class=\"leftCell\"");

WriteLiteral(">");

            
            #line 81 "..\..\Translation\Views\ViewInstance.cshtml"
                                        Write(TranslationMessage.Type.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        <th");

WriteLiteral(" class=\"titleCell\"");

WriteLiteral(">");

            
            #line 82 "..\..\Translation\Views\ViewInstance.cshtml"
                                         Write(locInstance.Key.EntityType.NiceName());

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                    </tr>\r\n");

            
            #line 84 "..\..\Translation\Views\ViewInstance.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n                    <th");

WriteLiteral(" class=\"leftCell\"");

WriteLiteral(">");

            
            #line 86 "..\..\Translation\Views\ViewInstance.cshtml"
                                    Write(TranslationMessage.Instance.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                    <th");

WriteLiteral(" class=\"titleCell\"");

WriteLiteral(">");

            
            #line 87 "..\..\Translation\Views\ViewInstance.cshtml"
                                     Write(Html.Href(Navigator.NavigateRoute(locInstance.Key), locInstance.Key.ToString()));

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                </tr>\r\n            </thead>\r\n");

            
            #line 90 "..\..\Translation\Views\ViewInstance.cshtml"

            foreach (LocalizedInstanceKey key in locInstance.OrderBy(a => a.Route.ToString()))
            {
                var propertyString = key.Route.PropertyString().Replace("/", "[" + key.RowId + "].");

            
            #line default
            #line hidden
WriteLiteral("            <tr>\r\n                <th");

WriteLiteral(" class=\"leftCell\"");

WriteLiteral(">");

            
            #line 95 "..\..\Translation\Views\ViewInstance.cshtml"
                                Write(TranslationMessage.Property.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("\r\n                </th>\r\n                <th>");

            
            #line 97 "..\..\Translation\Views\ViewInstance.cshtml"
               Write(propertyString);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n            </tr>\r\n");

            
            #line 99 "..\..\Translation\Views\ViewInstance.cshtml"
            
                foreach (var ci in cultures)
                {
                    var formName = ci.Name + "#" + key.Instance.Key() + "#" + propertyString;

                    if (ci.Name == TranslatedInstanceLogic.DefaultCulture.Name)
                    {

            
            #line default
            #line hidden
WriteLiteral("            <tr>\r\n                <td");

WriteLiteral(" class=\"leftCell\"");

WriteLiteral("><em>");

            
            #line 107 "..\..\Translation\Views\ViewInstance.cshtml"
                                    Write(TranslatedInstanceLogic.DefaultCulture);

            
            #line default
            #line hidden
WriteLiteral("</em></td>\r\n                <td");

WriteLiteral(" class=\"monospaceCell\"");

WriteLiteral(">\r\n");

            
            #line 109 "..\..\Translation\Views\ViewInstance.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 109 "..\..\Translation\Views\ViewInstance.cshtml"
                     if (TranslatedInstanceLogic.RouteType(key.Route).Value == TraducibleRouteType.Html)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <pre>");

            
            #line 111 "..\..\Translation\Views\ViewInstance.cshtml"
                        Write(master[key]);

            
            #line default
            #line hidden
WriteLiteral("</pre>\r\n");

            
            #line 112 "..\..\Translation\Views\ViewInstance.cshtml"
                    }
                    else
                    {
                        
            
            #line default
            #line hidden
            
            #line 115 "..\..\Translation\Views\ViewInstance.cshtml"
                   Write(master[key]);

            
            #line default
            #line hidden
            
            #line 115 "..\..\Translation\Views\ViewInstance.cshtml"
                                    
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 117 "..\..\Translation\Views\ViewInstance.cshtml"
               Write(Html.TextArea(formName, master[key], new { style = "display:none" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n");

            
            #line 120 "..\..\Translation\Views\ViewInstance.cshtml"
                    }
                    else
                    {
                        TranslatedInstanceDN trans = Model.TryGetC(ci).TryGetC(key);

                        if (trans != null && editCulture(ci))
                        {

            
            #line default
            #line hidden
WriteLiteral("            <tr>\r\n                <td");

WriteLiteral(" class=\"leftCell\"");

WriteLiteral(">");

            
            #line 128 "..\..\Translation\Views\ViewInstance.cshtml"
                                Write(ci.Name);

            
            #line default
            #line hidden
WriteLiteral(" Diff</td>\r\n                <td");

WriteLiteral(" class=\"monospaceCell\"");

WriteLiteral(">\r\n                    <pre>");

            
            #line 130 "..\..\Translation\Views\ViewInstance.cshtml"
                    Write(Signum.Web.Translation.TranslationClient.Diff(trans.OriginalText, trans.TranslatedText));

            
            #line default
            #line hidden
WriteLiteral("</pre>\r\n                </td>\r\n            </tr>\r\n");

            
            #line 133 "..\..\Translation\Views\ViewInstance.cshtml"
                                
                        }


                        if (trans != null || editCulture(ci))
                        {   

            
            #line default
            #line hidden
WriteLiteral("            <tr>\r\n                <td");

WriteLiteral(" class=\"leftCell\"");

WriteLiteral(">");

            
            #line 140 "..\..\Translation\Views\ViewInstance.cshtml"
                                Write(ci.Name);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" class=\"monospaceCell\"");

WriteLiteral(">\r\n");

            
            #line 142 "..\..\Translation\Views\ViewInstance.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 142 "..\..\Translation\Views\ViewInstance.cshtml"
                     if (editCulture(ci))
                    {
                        
            
            #line default
            #line hidden
            
            #line 144 "..\..\Translation\Views\ViewInstance.cshtml"
                   Write(Html.TextArea(formName, trans.Try(t => t.TranslatedText), new { style = "width:90%;height:16px" }));

            
            #line default
            #line hidden
            
            #line 144 "..\..\Translation\Views\ViewInstance.cshtml"
                                                                                                                           
                    }
                    else if (TranslatedInstanceLogic.RouteType(key.Route).Value == TraducibleRouteType.Html)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <pre>");

            
            #line 148 "..\..\Translation\Views\ViewInstance.cshtml"
                        Write(trans.TranslatedText);

            
            #line default
            #line hidden
WriteLiteral("</pre>\r\n");

            
            #line 149 "..\..\Translation\Views\ViewInstance.cshtml"
                    }
                    else
                    {
                        
            
            #line default
            #line hidden
            
            #line 152 "..\..\Translation\Views\ViewInstance.cshtml"
                   Write(trans.TranslatedText);

            
            #line default
            #line hidden
            
            #line 152 "..\..\Translation\Views\ViewInstance.cshtml"
                                             
                    }

            
            #line default
            #line hidden
WriteLiteral("                </td>\r\n            </tr>\r\n");

            
            #line 156 "..\..\Translation\Views\ViewInstance.cshtml"
                        }
                    }

                }
            }
        }

            
            #line default
            #line hidden
WriteLiteral("    </table>\r\n");

WriteLiteral("    <input");

WriteLiteral(" type=\"submit\"");

WriteAttribute("value", Tuple.Create(" value=\"", 6487), Tuple.Create("\"", 6534)
            
            #line 163 "..\..\Translation\Views\ViewInstance.cshtml"
, Tuple.Create(Tuple.Create("", 6495), Tuple.Create<System.Object, System.Int32>(TranslationMessage.Save.NiceToString()
            
            #line default
            #line hidden
, 6495), false)
);

WriteLiteral(" />\r\n");

            
            #line 164 "..\..\Translation\Views\ViewInstance.cshtml"
    }
}

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<script>\r\n    $(function () {\r\n");

WriteLiteral("        ");

            
            #line 170 "..\..\Translation\Views\ViewInstance.cshtml"
    Write(Signum.Web.Translation.TranslationClient.Module["fixTextAreas"]());

            
            #line default
            #line hidden
WriteLiteral("\r\n    });\r\n</script>\r\n");

        }
    }
}
#pragma warning restore 1591
